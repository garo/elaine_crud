<%# Shared form partial for new and edit views %>
<% form_url = record.persisted? ? { action: :update, id: record.id } : { action: :create } %>
<%= form_with model: record, url: form_url, local: true, class: "space-y-6" do |form| %>
  
  <%# Handle parent context for has_many relationships %>
  <% if @parent_context && @parent_context[:record] %>
    <%= form.hidden_field @parent_context[:foreign_key], value: @parent_context[:record].id %>
    
    <div class="mb-4 p-3 bg-gray-50 rounded-md">
      <p class="text-sm text-gray-600">
        Creating <%= record.class.name.underscore.humanize.downcase %> for
        <strong><%= @parent_context[:model_class].name %>:</strong>
        <%= @parent_context[:record].public_send(controller.send(:determine_display_field_for_model, @parent_context[:model_class])) %>
      </p>
    </div>
  <% end %>

  <%# Display validation errors if any %>
  <% if record.errors.any? %>
    <div class="bg-red-50 border border-red-200 rounded-md p-4 mb-4">
      <h3 class="text-sm font-medium text-red-800">
        <%= pluralize(record.errors.count, "error") %> prohibited this <%= record.class.name.underscore.humanize.downcase %> from being saved:
      </h3>
      <ul class="mt-2 text-sm text-red-700 list-disc list-inside">
        <% record.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <%# Render form fields using shared partial %>
  <div class="space-y-4">
    <%= render partial: 'elaine_crud/base/form_fields',
               locals: { form: form, record: record } %>
  </div>

  <div class="flex justify-end space-x-3">
    <%= link_to "Cancel", 
        url_for(action: :index), 
        class: "bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded" %>
    <%= form.submit submit_text, 
        class: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" %>
  </div>
<% end %>